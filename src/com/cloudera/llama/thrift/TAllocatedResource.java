/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cloudera.llama.thrift;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import java.util.*;

public class TAllocatedResource implements org.apache.thrift.TBase<TAllocatedResource, TAllocatedResource._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAllocatedResource");

  private static final org.apache.thrift.protocol.TField RESERVATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reservation_id", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_RESOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("client_resource_id", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField RM_RESOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("rm_resource_id", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField V_CPU_CORES_FIELD_DESC = new org.apache.thrift.protocol.TField("v_cpu_cores", org.apache.thrift.protocol.TType.I16, (short)4);
  private static final org.apache.thrift.protocol.TField MEMORY_MB_FIELD_DESC = new org.apache.thrift.protocol.TField("memory_mb", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TAllocatedResourceStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TAllocatedResourceTupleSchemeFactory());
  }

  public TUniqueId reservation_id; // required
  public TUniqueId client_resource_id; // required
  public String rm_resource_id; // required
  public short v_cpu_cores; // required
  public int memory_mb; // required
  public String location; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESERVATION_ID((short)1, "reservation_id"),
    CLIENT_RESOURCE_ID((short)2, "client_resource_id"),
    RM_RESOURCE_ID((short)3, "rm_resource_id"),
    V_CPU_CORES((short)4, "v_cpu_cores"),
    MEMORY_MB((short)5, "memory_mb"),
    LOCATION((short)6, "location");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESERVATION_ID
          return RESERVATION_ID;
        case 2: // CLIENT_RESOURCE_ID
          return CLIENT_RESOURCE_ID;
        case 3: // RM_RESOURCE_ID
          return RM_RESOURCE_ID;
        case 4: // V_CPU_CORES
          return V_CPU_CORES;
        case 5: // MEMORY_MB
          return MEMORY_MB;
        case 6: // LOCATION
          return LOCATION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __V_CPU_CORES_ISSET_ID = 0;
  private static final int __MEMORY_MB_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESERVATION_ID, new org.apache.thrift.meta_data.FieldMetaData("reservation_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TUniqueId.class)));
    tmpMap.put(_Fields.CLIENT_RESOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("client_resource_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TUniqueId.class)));
    tmpMap.put(_Fields.RM_RESOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("rm_resource_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.V_CPU_CORES, new org.apache.thrift.meta_data.FieldMetaData("v_cpu_cores", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.MEMORY_MB, new org.apache.thrift.meta_data.FieldMetaData("memory_mb", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TAllocatedResource.class, metaDataMap);
  }

  public TAllocatedResource() {
  }

  public TAllocatedResource(
    TUniqueId reservation_id,
    TUniqueId client_resource_id,
    String rm_resource_id,
    short v_cpu_cores,
    int memory_mb,
    String location)
  {
    this();
    this.reservation_id = reservation_id;
    this.client_resource_id = client_resource_id;
    this.rm_resource_id = rm_resource_id;
    this.v_cpu_cores = v_cpu_cores;
    setV_cpu_coresIsSet(true);
    this.memory_mb = memory_mb;
    setMemory_mbIsSet(true);
    this.location = location;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TAllocatedResource(TAllocatedResource other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetReservation_id()) {
      this.reservation_id = new TUniqueId(other.reservation_id);
    }
    if (other.isSetClient_resource_id()) {
      this.client_resource_id = new TUniqueId(other.client_resource_id);
    }
    if (other.isSetRm_resource_id()) {
      this.rm_resource_id = other.rm_resource_id;
    }
    this.v_cpu_cores = other.v_cpu_cores;
    this.memory_mb = other.memory_mb;
    if (other.isSetLocation()) {
      this.location = other.location;
    }
  }

  public TAllocatedResource deepCopy() {
    return new TAllocatedResource(this);
  }

  @Override
  public void clear() {
    this.reservation_id = null;
    this.client_resource_id = null;
    this.rm_resource_id = null;
    setV_cpu_coresIsSet(false);
    this.v_cpu_cores = 0;
    setMemory_mbIsSet(false);
    this.memory_mb = 0;
    this.location = null;
  }

  public TUniqueId getReservation_id() {
    return this.reservation_id;
  }

  public TAllocatedResource setReservation_id(TUniqueId reservation_id) {
    this.reservation_id = reservation_id;
    return this;
  }

  public void unsetReservation_id() {
    this.reservation_id = null;
  }

  /** Returns true if field reservation_id is set (has been assigned a value) and false otherwise */
  public boolean isSetReservation_id() {
    return this.reservation_id != null;
  }

  public void setReservation_idIsSet(boolean value) {
    if (!value) {
      this.reservation_id = null;
    }
  }

  public TUniqueId getClient_resource_id() {
    return this.client_resource_id;
  }

  public TAllocatedResource setClient_resource_id(TUniqueId client_resource_id) {
    this.client_resource_id = client_resource_id;
    return this;
  }

  public void unsetClient_resource_id() {
    this.client_resource_id = null;
  }

  /** Returns true if field client_resource_id is set (has been assigned a value) and false otherwise */
  public boolean isSetClient_resource_id() {
    return this.client_resource_id != null;
  }

  public void setClient_resource_idIsSet(boolean value) {
    if (!value) {
      this.client_resource_id = null;
    }
  }

  public String getRm_resource_id() {
    return this.rm_resource_id;
  }

  public TAllocatedResource setRm_resource_id(String rm_resource_id) {
    this.rm_resource_id = rm_resource_id;
    return this;
  }

  public void unsetRm_resource_id() {
    this.rm_resource_id = null;
  }

  /** Returns true if field rm_resource_id is set (has been assigned a value) and false otherwise */
  public boolean isSetRm_resource_id() {
    return this.rm_resource_id != null;
  }

  public void setRm_resource_idIsSet(boolean value) {
    if (!value) {
      this.rm_resource_id = null;
    }
  }

  public short getV_cpu_cores() {
    return this.v_cpu_cores;
  }

  public TAllocatedResource setV_cpu_cores(short v_cpu_cores) {
    this.v_cpu_cores = v_cpu_cores;
    setV_cpu_coresIsSet(true);
    return this;
  }

  public void unsetV_cpu_cores() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __V_CPU_CORES_ISSET_ID);
  }

  /** Returns true if field v_cpu_cores is set (has been assigned a value) and false otherwise */
  public boolean isSetV_cpu_cores() {
    return EncodingUtils.testBit(__isset_bitfield, __V_CPU_CORES_ISSET_ID);
  }

  public void setV_cpu_coresIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __V_CPU_CORES_ISSET_ID, value);
  }

  public int getMemory_mb() {
    return this.memory_mb;
  }

  public TAllocatedResource setMemory_mb(int memory_mb) {
    this.memory_mb = memory_mb;
    setMemory_mbIsSet(true);
    return this;
  }

  public void unsetMemory_mb() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMORY_MB_ISSET_ID);
  }

  /** Returns true if field memory_mb is set (has been assigned a value) and false otherwise */
  public boolean isSetMemory_mb() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMORY_MB_ISSET_ID);
  }

  public void setMemory_mbIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMORY_MB_ISSET_ID, value);
  }

  public String getLocation() {
    return this.location;
  }

  public TAllocatedResource setLocation(String location) {
    this.location = location;
    return this;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESERVATION_ID:
      if (value == null) {
        unsetReservation_id();
      } else {
        setReservation_id((TUniqueId)value);
      }
      break;

    case CLIENT_RESOURCE_ID:
      if (value == null) {
        unsetClient_resource_id();
      } else {
        setClient_resource_id((TUniqueId)value);
      }
      break;

    case RM_RESOURCE_ID:
      if (value == null) {
        unsetRm_resource_id();
      } else {
        setRm_resource_id((String)value);
      }
      break;

    case V_CPU_CORES:
      if (value == null) {
        unsetV_cpu_cores();
      } else {
        setV_cpu_cores((Short)value);
      }
      break;

    case MEMORY_MB:
      if (value == null) {
        unsetMemory_mb();
      } else {
        setMemory_mb((Integer)value);
      }
      break;

    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESERVATION_ID:
      return getReservation_id();

    case CLIENT_RESOURCE_ID:
      return getClient_resource_id();

    case RM_RESOURCE_ID:
      return getRm_resource_id();

    case V_CPU_CORES:
      return Short.valueOf(getV_cpu_cores());

    case MEMORY_MB:
      return Integer.valueOf(getMemory_mb());

    case LOCATION:
      return getLocation();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESERVATION_ID:
      return isSetReservation_id();
    case CLIENT_RESOURCE_ID:
      return isSetClient_resource_id();
    case RM_RESOURCE_ID:
      return isSetRm_resource_id();
    case V_CPU_CORES:
      return isSetV_cpu_cores();
    case MEMORY_MB:
      return isSetMemory_mb();
    case LOCATION:
      return isSetLocation();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TAllocatedResource)
      return this.equals((TAllocatedResource)that);
    return false;
  }

  public boolean equals(TAllocatedResource that) {
    if (that == null)
      return false;

    boolean this_present_reservation_id = true && this.isSetReservation_id();
    boolean that_present_reservation_id = true && that.isSetReservation_id();
    if (this_present_reservation_id || that_present_reservation_id) {
      if (!(this_present_reservation_id && that_present_reservation_id))
        return false;
      if (!this.reservation_id.equals(that.reservation_id))
        return false;
    }

    boolean this_present_client_resource_id = true && this.isSetClient_resource_id();
    boolean that_present_client_resource_id = true && that.isSetClient_resource_id();
    if (this_present_client_resource_id || that_present_client_resource_id) {
      if (!(this_present_client_resource_id && that_present_client_resource_id))
        return false;
      if (!this.client_resource_id.equals(that.client_resource_id))
        return false;
    }

    boolean this_present_rm_resource_id = true && this.isSetRm_resource_id();
    boolean that_present_rm_resource_id = true && that.isSetRm_resource_id();
    if (this_present_rm_resource_id || that_present_rm_resource_id) {
      if (!(this_present_rm_resource_id && that_present_rm_resource_id))
        return false;
      if (!this.rm_resource_id.equals(that.rm_resource_id))
        return false;
    }

    boolean this_present_v_cpu_cores = true;
    boolean that_present_v_cpu_cores = true;
    if (this_present_v_cpu_cores || that_present_v_cpu_cores) {
      if (!(this_present_v_cpu_cores && that_present_v_cpu_cores))
        return false;
      if (this.v_cpu_cores != that.v_cpu_cores)
        return false;
    }

    boolean this_present_memory_mb = true;
    boolean that_present_memory_mb = true;
    if (this_present_memory_mb || that_present_memory_mb) {
      if (!(this_present_memory_mb && that_present_memory_mb))
        return false;
      if (this.memory_mb != that.memory_mb)
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TAllocatedResource other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TAllocatedResource typedOther = (TAllocatedResource)other;

    lastComparison = Boolean.valueOf(isSetReservation_id()).compareTo(typedOther.isSetReservation_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReservation_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reservation_id, typedOther.reservation_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClient_resource_id()).compareTo(typedOther.isSetClient_resource_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClient_resource_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_resource_id, typedOther.client_resource_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRm_resource_id()).compareTo(typedOther.isSetRm_resource_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRm_resource_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rm_resource_id, typedOther.rm_resource_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetV_cpu_cores()).compareTo(typedOther.isSetV_cpu_cores());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetV_cpu_cores()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.v_cpu_cores, typedOther.v_cpu_cores);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemory_mb()).compareTo(typedOther.isSetMemory_mb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemory_mb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memory_mb, typedOther.memory_mb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocation()).compareTo(typedOther.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, typedOther.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TAllocatedResource(");
    boolean first = true;

    sb.append("reservation_id:");
    if (this.reservation_id == null) {
      sb.append("null");
    } else {
      sb.append(this.reservation_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("client_resource_id:");
    if (this.client_resource_id == null) {
      sb.append("null");
    } else {
      sb.append(this.client_resource_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rm_resource_id:");
    if (this.rm_resource_id == null) {
      sb.append("null");
    } else {
      sb.append(this.rm_resource_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("v_cpu_cores:");
    sb.append(this.v_cpu_cores);
    first = false;
    if (!first) sb.append(", ");
    sb.append("memory_mb:");
    sb.append(this.memory_mb);
    first = false;
    if (!first) sb.append(", ");
    sb.append("location:");
    if (this.location == null) {
      sb.append("null");
    } else {
      sb.append(this.location);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (reservation_id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'reservation_id' was not present! Struct: " + toString());
    }
    if (client_resource_id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'client_resource_id' was not present! Struct: " + toString());
    }
    if (rm_resource_id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'rm_resource_id' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'v_cpu_cores' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'memory_mb' because it's a primitive and you chose the non-beans generator.
    if (location == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'location' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (reservation_id != null) {
      reservation_id.validate();
    }
    if (client_resource_id != null) {
      client_resource_id.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TAllocatedResourceStandardSchemeFactory implements SchemeFactory {
    public TAllocatedResourceStandardScheme getScheme() {
      return new TAllocatedResourceStandardScheme();
    }
  }

  private static class TAllocatedResourceStandardScheme extends StandardScheme<TAllocatedResource> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TAllocatedResource struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESERVATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.reservation_id = new TUniqueId();
              struct.reservation_id.read(iprot);
              struct.setReservation_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_RESOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.client_resource_id = new TUniqueId();
              struct.client_resource_id.read(iprot);
              struct.setClient_resource_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RM_RESOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.rm_resource_id = iprot.readString();
              struct.setRm_resource_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // V_CPU_CORES
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.v_cpu_cores = iprot.readI16();
              struct.setV_cpu_coresIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MEMORY_MB
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.memory_mb = iprot.readI32();
              struct.setMemory_mbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.location = iprot.readString();
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetV_cpu_cores()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'v_cpu_cores' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetMemory_mb()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'memory_mb' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TAllocatedResource struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.reservation_id != null) {
        oprot.writeFieldBegin(RESERVATION_ID_FIELD_DESC);
        struct.reservation_id.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.client_resource_id != null) {
        oprot.writeFieldBegin(CLIENT_RESOURCE_ID_FIELD_DESC);
        struct.client_resource_id.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.rm_resource_id != null) {
        oprot.writeFieldBegin(RM_RESOURCE_ID_FIELD_DESC);
        oprot.writeString(struct.rm_resource_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(V_CPU_CORES_FIELD_DESC);
      oprot.writeI16(struct.v_cpu_cores);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MEMORY_MB_FIELD_DESC);
      oprot.writeI32(struct.memory_mb);
      oprot.writeFieldEnd();
      if (struct.location != null) {
        oprot.writeFieldBegin(LOCATION_FIELD_DESC);
        oprot.writeString(struct.location);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TAllocatedResourceTupleSchemeFactory implements SchemeFactory {
    public TAllocatedResourceTupleScheme getScheme() {
      return new TAllocatedResourceTupleScheme();
    }
  }

  private static class TAllocatedResourceTupleScheme extends TupleScheme<TAllocatedResource> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TAllocatedResource struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.reservation_id.write(oprot);
      struct.client_resource_id.write(oprot);
      oprot.writeString(struct.rm_resource_id);
      oprot.writeI16(struct.v_cpu_cores);
      oprot.writeI32(struct.memory_mb);
      oprot.writeString(struct.location);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TAllocatedResource struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.reservation_id = new TUniqueId();
      struct.reservation_id.read(iprot);
      struct.setReservation_idIsSet(true);
      struct.client_resource_id = new TUniqueId();
      struct.client_resource_id.read(iprot);
      struct.setClient_resource_idIsSet(true);
      struct.rm_resource_id = iprot.readString();
      struct.setRm_resource_idIsSet(true);
      struct.v_cpu_cores = iprot.readI16();
      struct.setV_cpu_coresIsSet(true);
      struct.memory_mb = iprot.readI32();
      struct.setMemory_mbIsSet(true);
      struct.location = iprot.readString();
      struct.setLocationIsSet(true);
    }
  }

}

